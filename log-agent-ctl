#!/bin/bash

set -e

CONFIG_DIR="/etc/log-forwarder-agent"
MONITOR_RULES_FILE="$CONFIG_DIR/monitor_rules.json"
ACTION_RULES_FILE="$CONFIG_DIR/action_rules.json"
SERVICE_NAME="log-agent.service"

check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        echo "This command requires root privileges. Please use 'sudo'." >&2
        exit 1
    fi
}

check_jq() {
    if ! command -v jq &> /dev/null; then
        echo "'jq' is not installed, but it is required for modifying rules." >&2
        echo "Please install it using your package manager (e.g., 'sudo apt-get install jq')." >&2
        exit 1
    fi
}

restart_service() {
    echo "Restarting the agent to apply changes..."
    systemctl restart "$SERVICE_NAME"
    echo "Service restarted."
}

show_config() {
    echo "--- Current Configuration ---"
    echo ""
    echo "Monitor Rules ($MONITOR_RULES_FILE):"
    if [ -f "$MONITOR_RULES_FILE" ]; then
        jq . "$MONITOR_RULES_FILE"
    else
        echo "File not found."
    fi
    echo ""
    echo "Action Rules ($ACTION_RULES_FILE):"
    if [ -f "$ACTION_RULES_FILE" ]; then
        jq . "$ACTION_RULES_FILE"
    else
        echo "File not found."
    fi
    echo "---------------------------"
}

set_source() {
    check_root
    check_jq
    if [ -z "$1" ]; then
        echo "Error: You must provide a file path." >&2
        exit 1
    fi

    jq --arg path "$1" '.source_path = $path' "$MONITOR_RULES_FILE" > tmp.$$.json && mv tmp.$$.json "$MONITOR_RULES_FILE"
    echo "Source path updated to: $1"
    restart_service
}

add_destination_file() {
    check_root
    check_jq
    if [ -z "$1" ]; then
        echo "Error: You must provide a file path." >&2
        exit 1
    fi

    jq --arg path "$1" '.destinations += [{"type": "file", "path": $path}]' "$ACTION_RULES_FILE" > tmp.$$.json && mv tmp.$$.json "$ACTION_RULES_FILE"
    echo "Added FILE destination: $1"
    restart_service
}

add_destination_syslog() {
    check_root
    check_jq
    if [ -z "$2" ]; then
        echo "Error: You must provide a host and port." >&2
        exit 1
    fi

    HOST=$1
    PORT=$2
    TOKEN=$3

    if [ -n "$TOKEN" ]; then
        jq --arg host "$HOST" --argjson port "$PORT" --arg token "$TOKEN" \
           '.destinations += [{"type": "syslog", "host": $host, "port": $port, "protocol": "udp", "token": $token}]' \
           "$ACTION_RULES_FILE" > tmp.$$.json && mv tmp.$$.json "$ACTION_RULES_FILE"
        echo "Added SYSLOG destination: $HOST:$PORT (with token)"
    else
        jq --arg host "$HOST" --argjson port "$PORT" \
           '.destinations += [{"type": "syslog", "host": $host, "port": $port, "protocol": "udp"}]' \
           "$ACTION_RULES_FILE" > tmp.$$.json && mv tmp.$$.json "$ACTION_RULES_FILE"
        echo "Added SYSLOG destination: $HOST:$PORT (no token)"
    fi
    restart_service
}

add_destination_http() {
    check_root
    check_jq
    if [ -z "$1" ]; then
        echo "Error: You must provide a URL." >&2
        exit 1
    fi

    URL=$1
    TOKEN=$2

    if [ -n "$TOKEN" ]; then
        jq --arg url "$URL" --arg token "$TOKEN" \
           '.destinations += [{"type": "http", "url": $url, "token": $token}]' \
           "$ACTION_RULES_FILE" > tmp.$$.json && mv tmp.$$.json "$ACTION_RULES_FILE"
        echo "Added HTTP destination: $URL (with token)"
    else
        jq --arg url "$URL" \
           '.destinations += [{"type": "http", "url": $url}]' \
           "$ACTION_RULES_FILE" > tmp.$$.json && mv tmp.$$.json "$ACTION_RULES_FILE"
        echo "Added HTTP destination: $URL (no token)"
    fi
    restart_service
}

clear_destinations() {
    check_root
    check_jq
    echo '{"destinations": []}' > "$ACTION_RULES_FILE"
    echo "All destinations have been cleared."
    restart_service
}

usage() {
    echo "log-agent-ctl - Log Forwarding Agent Management Tool"
    echo ""
    echo "Usage: log-agent-ctl [command]"
    echo ""
    echo "Available Commands:"
    echo "  help                                 Shows this help message."
    echo "  show-config                          Displays the current monitoring and action rules."
    echo ""
    echo "Configuration Commands (require sudo):"
    echo "  set-source <path>                      Overrides the source file path to monitor."
    echo "  add-destination-file <path>            Adds a local file destination."
    echo "  add-destination-syslog <host> <port> [token] Adds a remote syslog server destination (token is optional)."
    echo "  add-destination-http <url> [token]     Adds a remote HTTP endpoint destination (token is optional)."
    echo "  clear-destinations                     Removes all configured destinations."
}

case "$1" in
    show-config)
        show_config
        ;;
    set-source)
        set_source "$2"
        ;;
    add-destination-file)
        add_destination_file "$2"
        ;;
    add-destination-syslog)
        add_destination_syslog "$2" "$3" "$4"
        ;;
    add-destination-http)
        add_destination_http "$2" "$3"
        ;;
    clear-destinations)
        clear_destinations
        ;;
    help|--help|-h|"")
        usage
        ;;
    *)
        echo "Error: Unknown command '$1'" >&2
        usage
        exit 1
        ;;
esac